Using loss: pinball.
Using temporary directory /var/folders/9b/_dhnw9_17kgb24l4cq75nq9h0000gn/T/tmphhuj_f0o.
gefundener dataset Path: /Users/wiebkezink/Documents/Uni Münster/MA/mock_dataset
Loading /mock_dataset dataset from /Users/wiebkezink/Documents/Uni Münster/MA/mock_dataset.
Computed weighting 10.0-quantile-lower bound: 0.09523809523809523.
Length of train and val splits: 5, 2.
New length of train and val splits: 5, 2.
Using 0 workers.
Loading model - reinit: True | path: None specified.
Using architecture unet.
Encoder output channels: (14, 64, 256, 512, 1024, 2048)
Adjusting SegmentationHead with encoder output channels: 2048
  1%|█                                                                                                          | 1/100 [00:05<09:38,  5.84s/it]
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
L2 4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
L2 Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
L2 4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
L2 Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
L2 4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
L2 Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
L2 4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
L2 Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
L2 4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
L2 Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
mask shape: torch.Size([5, 65536])
out shape: torch.Size([5, 3, 65536])
target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Original out shape: torch.Size([5, 3, 256, 256])
Original target shape: torch.Size([5, 3, 256, 256])
4D Shape: out: torch.Size([5, 3, 65536]), target: torch.Size([5, 65536])
Mask shape: torch.Size([5, 3, 65536]), Out shape: torch.Size([5, 3, 65536]), Target shape: torch.Size([5, 65536])
Removed temporary directory /var/folders/9b/_dhnw9_17kgb24l4cq75nq9h0000gn/T/tmphhuj_f0o.
Traceback (most recent call last):
  File "/Users/wiebkezink/Documents/Uni Münster/MA/Canopy-Height-Prediction/training/main.py", line 109, in <module>
    runner.run()
  File "/Users/wiebkezink/Documents/Uni Münster/MA/Canopy-Height-Prediction/training/runner.py", line 761, in run
    self.train()  # Train the model
  File "/Users/wiebkezink/Documents/Uni Münster/MA/Canopy-Height-Prediction/training/runner.py", line 736, in train
    viz = self.get_visualization(viz_name=viz_func, inputs=x_input, labels=y_target, outputs=output)
  File "/Users/wiebkezink/Documents/Uni Münster/MA/Canopy-Height-Prediction/training/runner.py", line 482, in get_visualization
    return viz_fn(inputs=inputs, labels=labels, outputs=outputs)
  File "/Users/wiebkezink/Documents/Uni Münster/MA/Canopy-Height-Prediction/training/visualization.py", line 32, in density_scatter_visualization
    outputs = outputs[labels != ignore_value]
IndexError: boolean index did not match indexed array along axis 1; size of axis is 3 but size of corresponding boolean axis is 256
